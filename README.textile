h3. Ignis is an RIA(Rich Internet Application) for multi-user persistent-forever chatting.

Why is this cool? Simple. If you're on a project that needs a lot of knowledge sharing, it's easy to build up a base of information by just talking about it, and having it searchable.

h3. Credit

This application was inspired by Campfire which is a product of 37signals.

Unfortunately, I was unable to use a public service when behind a firewall for a particular company. So I decided to build my own persisting group-chat app. It is an ongoing effort.

h3. Installing

You must have Ruby 1.9.2 installed. All needed gems come bundled.

Check out the code from github, and then run the following commands:

<pre>
<code>
  bundle install
  rake db:migrate
  thin start
</code>
</pre>

That's it!

h3. Features

* Web based multi-room chat application.
* All conversations are logged and to the database.
* Active user notification when they aren't in a room that receives the message.
* When joining a room you automatically receive the last 30 messages in the room.
* Alterable username so you can always pick a username that suits you.
* Messages are fully encoded, so you can post code or anything else you want in them.

h3. Features "in the pipeline"

h5. Short term:

* UI and Resources for... groups and rooms. Includes add user to group functionality.
* Lock down groups.
* Links in message content should actually be hyperlinked.
* Create MotD tab and alteration resource

h5. Mid term:

* Add file and code attachments to rooms. Attachments will show up in the form of a hyperlink.
** Files will be stored in the form of BLOBs in the database.
** Code attachments will be stored in a special table, and will be highlighted appropriately when shown (in an Ext Window).
* When getting history, all messages should be linked so that they can pop up a window that will show 'surrounding' history.
* When tab/window is not focused, should blink tab once on new data.
* Move all authentication to real ExtJS components.

h5. Long term:

* At some point, if I get a chance, I would like to pull in proper SASS theming for ExtJS.

h5. Want a feature faster?

Fork me! I take pull requests on quality code. Do feel free to shoot me a message first, if you're wondering if it's a feature I'll accept.

h3. Technologies used

Being the person I am, I built on top of other great technologies. Such as...

* Ruby on Rails and surrounding ecosystem of gems: haml, sass, coffeescript, devise, uglifier, thin...
* ExtJS4. An amazingly powerful RIA UI framework produced by Sencha.
* SQLite. An excellent flat file based database.

While I currently have SQLite behind the application, I have not (and will not) stray from active record. So you should be able to put any database you like behind it, assuming you have knowledge of how Ruby on Rails works.

h3. License

This software is licensed under GPLv3 (only due to it being required by ExtJS4's usage- Sorry! Not a fan of forcing licenses myself).
